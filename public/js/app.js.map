{"version":3,"sources":["app.js"],"names":["$","imagesInfo","leftIndex","rightIndex","mobileViewport","window","matchMedia","tabletViewport","defineTable","table","viewPort","height","row","rowHeight","outerHeight","availableRows","Math","floor","prev","removeClass","addClass","index","toString","each","this","prevNum","clickCount","draw","random","themes","length","i","e","css","drawTheme","images","counter","on","hide","show","next","showImagesCommercial","mq","handleRightGallery","matches","addListener"],"mappings":"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","file":"app.js","sourcesContent":["$(() => {\n  // define image index object to properly show images after resizing\n  const imagesInfo = {\n    leftIndex: 0,\n    rightIndex: 1\n  };\n\n  // define smaller screens\n\n  let mobileViewport = window.matchMedia(\"screen and (max-width: 1023px)\");\n  let tabletViewport = window.matchMedia(\"screen and (max-width: 1199px) and (orientation: portrait)\");\n\n  // drawing a table relative to viewport\n\n  const defineTable = () => {\n    let table = $('.table');\n    let viewPort = $(window).height();\n    let row = $('.row');\n    let rowHeight = row.outerHeight();\n    let availableRows =  Math.floor(viewPort/rowHeight);\n\n    // to avoid content-wrapper class going over \"rows20\"\n    availableRows = availableRows > 21 ? 21 : availableRows;\n\n    // draw table rows (min 12, max 20)\n    // add class to content-wrapper informing how many rows is there\n    if (availableRows > 13){\n      table.prev().removeClass()\n        .addClass('content-wrapper')\n        .addClass(`rows${(availableRows-1).toString()}`);\n\n      row.each(function (index) {\n        index <= availableRows -1 ? $(this).removeClass('hidden'): $(this).addClass(\"hidden\");\n      })\n    } else{\n      table.prev().removeClass()\n        .addClass('content-wrapper')\n        .addClass(`rows13`);\n\n      row.each(function (index) {\n        index <= 12 ? $(this).removeClass('hidden'): $(this).addClass(\"hidden\");\n      })\n    }\n  };\n\n// drawing themes\n  let prevNum = -1;\n  let clickCount = 0;\n\n  const drawTheme = (themes)=> {\n\n    let draw = Math.floor(Math.random() * themes.length );\n\n    if ( draw === prevNum || draw === 1 ){\n      drawTheme(themes);\n    } else {\n      if (!(clickCount % 3) || clickCount === 0) {\n        if (prevNum === 0){\n          prevNum = 1;\n          themes.each(function (i, e) {\n            i === 1 ? $(e).css(\"display\", \"block\") : $(e).css(\"display\", \"none\");\n          })\n\n        } else{\n          prevNum = draw;\n          themes.each(function (i, e) {\n            i === draw ? $(e).css(\"display\", \"block\") : $(e).css(\"display\", \"none\");\n          })\n        }\n      }\n      clickCount++;\n    }\n  };\n\n// handling left and right side galleries\n  const handleLeftGallery = (index, images, themes)=>{\n    let counter = index;\n\n    $(\".nav-left > .next\").on(\"click\", function () {\n\n      drawTheme(themes);\n\n      if (counter === index ){\n        $(this).prev().show()\n      }\n\n      $(images[counter]).hide();\n      counter += 2;\n      imagesInfo.leftIndex = counter;\n      $(images[counter]).show();\n\n      if( !(images.length % 2) && counter === images.length -2 ){\n        $(this).hide();\n      } else if( images.length % 2 && counter === images.length -1){\n        $(this).hide()\n      }\n\n    });\n\n    $(\".nav-left > .prev\").on(\"click\", function () {\n\n      drawTheme(themes);\n\n      if( !(images.length % 2) && counter === images.length -2 ){\n        $(this).next().show();\n\n      } else if( images.length % 2 && counter === images.length -1){\n        $(this).next().show()\n      }\n\n      $(images[counter]).hide();\n      counter -= 2;\n      imagesInfo.leftIndex = counter;\n      $(images[counter]).show();\n\n      if (counter === index ){\n        $(this).hide()\n      }\n\n    })\n  };\n\n  const handleRightGallery = (index, images, themes)=>{\n    let counter = index;\n\n    $(\".nav-right > .next\").on(\"click\", function () {\n\n      drawTheme(themes);\n\n      if (counter === index ){\n        $(this).prev().show()\n      }\n\n      $(images[counter]).hide();\n      counter += 2;\n      imagesInfo.rightIndex = counter;\n      $(images[counter]).show();\n\n      if( !(images.length % 2) && counter === images.length -1 ){\n        $(this).hide();\n      } else if( images.length % 2 && counter === images.length -2){\n        $(this).hide()\n      }\n\n    });\n\n    $(\".nav-right > .prev\").on(\"click\", function () {\n\n      drawTheme(themes);\n\n      if( !(images.length % 2) && counter === images.length -1 ){\n        $(this).next().show();\n\n      } else if( images.length % 2 && counter === images.length -2){\n        $(this).next().show()\n      }\n\n      $(images[counter]).hide();\n      counter -= 2;\n      imagesInfo.rightIndex = counter;\n      $(images[counter]).show();\n\n      if (counter === index ){\n        $(this).hide()\n      }\n\n    })\n  };\n\n  const showImagesCommercial = () => {\n    const images = $('.image');\n    const themes = $('.theme img');\n\n    let leftIndex = 0;\n    let rightIndex = 1;\n    drawTheme(themes);\n    handleLeftGallery(leftIndex, images, themes);\n    handleRightGallery(rightIndex, images, themes);\n\n\n\n    // handle display while resize and change screen orientation\n\n\n    if(!(mobileViewport.matches || tabletViewport.matches)) {\n      $(images[0]).show();\n      $(images[1]).show();\n    }\n\n    mobileViewport.addListener(function(mq) {\n\n      if(mq.matches) {\n        $(images).show()\n      } else {\n        $(images).hide();\n        $(images[imagesInfo.leftIndex]).show();\n        $(images[imagesInfo.rightIndex]).show();\n\n      }\n\n    });\n\n    tabletViewport.addListener(function(mq) {\n\n      if(mq.matches) {\n        $(images).show()\n      } else {\n        $(images).hide();\n        $(images[imagesInfo.leftIndex]).show();\n        $(images[imagesInfo.rightIndex]).show();\n\n      }\n    });\n\n };\n showImagesCommercial();\n defineTable();\n $( window ).on(\"resize\",defineTable);\n\n\n});\n\n"]}