{"version":3,"sources":["app.js"],"names":["$","imagesInfo","leftIndex","rightIndex","mobileViewport","window","matchMedia","tabletViewport","defineTable","table","viewPort","height","row","rowHeight","outerHeight","availableRows","Math","floor","removeClass","addClass","index","toString","each","this","prevNum","clickCount","draw","random","themes","length","i","e","css","drawTheme","images","counter","on","hide","show","next","showImagesCommercial","mq","handleRightGallery","matches","addListener"],"mappings":"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","file":"app.js","sourcesContent":["$(() => {\n  // define image index object to properly show images after resizing\n  const imagesInfo = {\n    leftIndex: 0,\n    rightIndex: 1\n  };\n\n  // define smaller screens\n\n  let mobileViewport = window.matchMedia(\"screen and (max-width: 1023px) and (orientation: landscape)\");\n  let tabletViewport = window.matchMedia(\"screen and (max-width: 1199px)\");\n\n  // drawing a table relative to viewport\n\n  const defineTable = () => {\n    let table = $('.table');\n    let viewPort = $(window).height();\n    let row = $('.row');\n    let rowHeight = row.outerHeight();\n    let availableRows =  Math.floor(viewPort/rowHeight);\n\n    if (availableRows > 12){\n      table.removeClass()\n        .addClass('table')\n        .addClass(`rows${availableRows.toString()}`);\n\n      row.each(function (index) {\n        index <= availableRows -2 ? $(this).removeClass('hidden'): $(this).addClass(\"hidden\");\n      })\n    } else{\n      table.removeClass()\n        .addClass('table')\n        .addClass(`rows12`);\n\n      row.each(function (index) {\n        index <= 11 ? $(this).removeClass('hidden'): $(this).addClass(\"hidden\");\n      })\n    }\n  };\n// drawing themes\n  let prevNum = -1;\n  let clickCount = 0;\n\n  const drawTheme = (themes)=> {\n\n    let draw = Math.floor(Math.random() * themes.length );\n\n    if ( draw === prevNum || draw === 1 ){\n      drawTheme(themes);\n    } else {\n      if (!(clickCount % 4) || clickCount === 0) {\n        if (prevNum === 0){\n          prevNum = 1;\n          themes.each(function (i, e) {\n            i === 1 ? $(e).css(\"display\", \"block\") : $(e).css(\"display\", \"none\");\n          })\n\n        } else{\n          prevNum = draw;\n          themes.each(function (i, e) {\n            i === draw ? $(e).css(\"display\", \"block\") : $(e).css(\"display\", \"none\");\n          })\n        }\n      }\n      clickCount++;\n    }\n  };\n\n// handling left and right side galleries\n  const handleLeftGallery = (index, images, themes)=>{\n    let counter = index;\n\n    $(\".nav-left > .next\").on(\"click\", function () {\n\n      drawTheme(themes);\n\n      if (counter === index ){\n        $(this).prev().show()\n      }\n\n      $(images[counter]).hide();\n      counter += 2;\n      imagesInfo.leftIndex = counter;\n      $(images[counter]).show();\n\n      if( !(images.length % 2) && counter === images.length -2 ){\n        $(this).hide();\n      } else if( images.length % 2 && counter === images.length -1){\n        $(this).hide()\n      }\n\n    });\n\n    $(\".nav-left > .prev\").on(\"click\", function () {\n\n      drawTheme(themes);\n\n      if( !(images.length % 2) && counter === images.length -2 ){\n        $(this).next().show();\n\n      } else if( images.length % 2 && counter === images.length -1){\n        $(this).next().show()\n      }\n\n      $(images[counter]).hide();\n      counter -= 2;\n      imagesInfo.leftIndex = counter;\n      $(images[counter]).show();\n\n      if (counter === index ){\n        $(this).hide()\n      }\n\n    })\n  };\n\n  const handleRightGallery = (index, images, themes)=>{\n    let counter = index;\n\n    $(\".nav-right > .next\").on(\"click\", function () {\n\n      drawTheme(themes);\n\n      if (counter === index ){\n        $(this).prev().show()\n      }\n\n      $(images[counter]).hide();\n      counter += 2;\n      imagesInfo.rightIndex = counter;\n      $(images[counter]).show();\n\n      if( !(images.length % 2) && counter === images.length -1 ){\n        $(this).hide();\n      } else if( images.length % 2 && counter === images.length -2){\n        $(this).hide()\n      }\n\n    });\n\n    $(\".nav-right > .prev\").on(\"click\", function () {\n\n      drawTheme(themes);\n\n      if( !(images.length % 2) && counter === images.length -1 ){\n        $(this).next().show();\n\n      } else if( images.length % 2 && counter === images.length -2){\n        $(this).next().show()\n      }\n\n      $(images[counter]).hide();\n      counter -= 2;\n      imagesInfo.rightIndex = counter;\n      $(images[counter]).show();\n\n      if (counter === index ){\n        $(this).hide()\n      }\n\n    })\n  };\n\n  const showImagesCommercial = () => {\n    const images = $('.image');\n    const themes = $('.theme img');\n\n    let leftIndex = 0;\n    let rightIndex = 1;\n    drawTheme(themes);\n    handleLeftGallery(leftIndex, images, themes);\n    handleRightGallery(rightIndex, images, themes);\n\n\n\n    // handle display while resize and change screen orientation\n\n\n    if(!(mobileViewport.matches || tabletViewport.matches)) {\n      $(images[0]).show();\n      $(images[1]).show();\n    }\n\n    mobileViewport.addListener(function(mq) {\n\n      if(mq.matches) {\n        $(images).show()\n      } else {\n        $(images).hide();\n        $(images[imagesInfo.leftIndex]).show();\n        $(images[imagesInfo.rightIndex]).show();\n\n      }\n\n    });\n\n    tabletViewport.addListener(function(mq) {\n\n      if(mq.matches) {\n        $(images).show()\n      } else {\n        $(images).hide();\n        $(images[imagesInfo.leftIndex]).show();\n        $(images[imagesInfo.rightIndex]).show();\n\n      }\n    });\n\n };\n showImagesCommercial();\n defineTable();\n $( window ).on(\"resize\",defineTable);\n\n});\n\n"]}