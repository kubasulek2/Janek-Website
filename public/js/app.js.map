{"version":3,"sources":["app.js"],"names":["$","request","restriction","undefined","filter","ingredient1","ingredient2","ingredient3","openFridge","async","resetRequest","handle","Object","keys","forEach","key","find","removeClass","val","text","animationEnd","handleBack","Promise","resolve","setTimeout","toggleClass","door","requestFetch","console","url","toLowerCase","fetch","cache","mode","log","redirect","query","headers","resp","createRecipeCard","catch","then","json","createQuery","array","data","result","push","length","maxIndex","hits","alert","drawRecipeData","index","recipeIndex","animateCard","Math","floor","random","changeRecipe","calories","round","recipe","yield","recipeNumber","card","off","clearRecipeData","css","display","image","onload","src","label","i","append","ingredients","on","empty","this","parent","prev","previousElementSibling","id","includes","drawnIngredient","handleSelection"],"mappings":"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","file":"app.js","sourcesContent":["$(() => {\n  let request = {\n    restriction: undefined,\n    filter: undefined,\n    ingredient1: undefined,\n    ingredient2: undefined,\n    ingredient3: undefined\n  };\n  const createRequest = () => {\n\n    request.restriction = $('.restriction').text() === 'No filter' ? undefined : $('.restriction').text();\n\n    request.filter = $('.filter').text() === 'No filter' ? undefined : $('.filter').text();\n    request.ingredient1 = $('#ingredient-1').val() === ''? undefined : $('#ingredient-1').val();\n    request.ingredient2 = $('#ingredient-2').val() === ''? undefined : $('#ingredient-2').val();\n    request.ingredient3 = $('#ingredient-3').val() === ''? undefined : $('#ingredient-3').val();\n    console.log(request.restriction);\n    requestFetch(request);\n    openFridge();\n  };\n\n  const resetRequest = ()=>{\n\n    Object.keys(request).forEach((key)=> request[key] = undefined);\n    $('.fridge').find('.dropdown-menu .show').removeClass('show');\n    $('.fridge').find('input').val('');\n    $('.restriction').text('No filter');\n    $('.filter').text('No filter')\n  };\n\n  const drawRequest = () => {\n    openFridge();\n    let ingredients = ['potato', 'salad', 'steak', 'tuna', 'salmon', 'cod', 'shrimps', 'rocket', 'spinach', 'onion', 'mushroom', 'leek', 'pumpkin', 'peas', 'bean', 'beans', 'cucumber', 'zucchini', 'garlic', 'broccoli', 'cauliflower', 'capers', 'carrot', 'beetroot', 'cabbage', 'asparagus', 'avocado', 'eggplant', 'rice', 'oats', 'buckwheat', 'black beans', 'chickpeas', 'millet', 'lentil', 'chicken', 'beef', 'turkey', 'duck', 'breast', 'pork', 'ham', 'mutton', 'chops', 'milk', 'cream', 'cheddar', 'yogurt', 'cottage', 'butter', 'mango', 'strawberry', 'orange', 'lemon', 'lime', 'coconut', 'banana', 'peach', 'olive', 'almonds', 'sesame', 'walnuts'];\n    let drawnIngredient = ingredients[Math.floor(Math.random() * ingredients.length)];\n\n    request.ingredient1 = drawnIngredient;\n    requestFetch(request);\n  };\n\n  const handleSelection = ()=> {\n\n    $('a.dropdown-item').on('click', function () {\n      $(this).parent().prev().text($(this).text())\n    });\n\n    $('.fa-times-circle').on('click', function () {\n      $(this).prev().val('');\n\n      request.ingredient1 = this.previousElementSibling.id.includes('1') ? undefined : request.ingredient1;\n      request.ingredient2 = this.previousElementSibling.id.includes('2') ? undefined : request.ingredient2;\n      request.ingredient3 = this.previousElementSibling.id.includes('3') ? undefined : request.ingredient3;\n    })\n  };\n\n\n\n\n  const openFridge = async ()=>{\n    const door = $('.door');\n    const handle = $('.handle');\n\n    resetRequest();\n    handle.addClass('open');\n\n    let handleBack = new Promise(resolve =>setTimeout(()=>resolve( handle.removeClass('open') ),300) );\n    let animationEnd = new Promise(resolve =>setTimeout(()=>resolve(),600) );\n\n    await handleBack;\n    await animationEnd;\n\n    door.toggleClass('open');\n\n  };\n\n\n  const requestFetch = request =>{\n\n    const appId = 'fd3ea657';\n    const appKey ='a61ca3c11d3b2ec930779e11cfe06c85';\n    let query = createQuery();\n\n    let filter = request.filter === undefined ? '' : `&diet=${request.filter.toLowerCase()}`;\n    let restriction = request.restriction === undefined ? '' : `&health=${request.restriction.toLowerCase()}`;\n    console.log(filter);\n    console.log(restriction);\n    let url = `https://api.edamam.com/search?q=${query}&app_id=${appId}&app_key=${appKey}${filter}${restriction}&from=0&to=100`;\n    console.log(url);\n    fetch(url,{\n      cache: \"no-store\",\n      mode: 'cors',\n      redirect: 'follow',\n      headers: {\n        'Accept-Encoding': 'gzip',\n      }\n    }).then(resp => resp.json())\n      .then(data =>{\n        console.log(data);\n        createRecipeCard(data);\n      })\n      .catch(err => alert(\"You must wait up to minute before next search\"))\n   };\n\n  const createQuery = () => {\n    let array = [];\n    let result ='';\n    if( request.ingredient1 !== undefined) {array.push(request.ingredient1)}\n    if( request.ingredient2 !== undefined) {array.push(request.ingredient2)}\n    if( request.ingredient3 !== undefined) {array.push(request.ingredient3)}\n    if (array.length === 3){ result = `${array[0]}+${array[1]}+${array[2]}`}\n    if (array.length === 2){ result = `${array[0]}+${array[1]}`}\n    if (array.length === 1){ result = `${array[0]}`}\n    return result\n  };\n\n  const createRecipeCard = data => {\n\n    let length = data.hits.length > 5 ? 5 : data.hits.length;\n    let index = 0;\n    let maxIndex = index + length - 1;\n    let recipeIndex = castRecipes(data.hits.length);\n    if (data.hits.length === 0){\n      alert(\"oops, coudnt find anything\")\n    } else{\n      drawRecipeData(data, index, maxIndex,recipeIndex);\n    }\n  };\n  const animateCard = () => {\n    $('.card').removeClass('animate');\n    setTimeout(function() {$('.card').addClass('animate')},10);\n  };\n\n  const castRecipes = (length) => {\n    return length <= 5 ? 0 : Math.floor(Math.random()*(length - 4))\n  };\n\n  const changeRecipe = (data, index, maxIndex, recipeIndex) => {\n    drawRecipeData(data, index, maxIndex, recipeIndex);\n\n  };\n\n  const drawRecipeData = (data, index, maxIndex, recipeIndex) => {\n\n    let recipe = data.hits[recipeIndex + index].recipe;\n    let image = new Image();\n    let calories = Math.round(recipe.calories / recipe.yield);\n    let recipeNumber = index + 1;\n\n    const card = $('.card');\n\n    $('.btn-prev').off();\n    $('.btn-next').off();\n    clearRecipeData();\n\n    let display = new Promise(resolve => {\n\n      card.css('display', 'block');\n      resolve()\n\n    });\n    display.then( animateCard() );\n\n\n    image.src = recipe.image;\n    image.onload = $('.card-image').css('background-image', `url(${image.src})`);\n\n    $('.card-title').text(recipe.label);\n    $('.group-info .info-1').text(`Servings: ${recipe.yield}`);\n    $('.group-info .info-2').text(`Cal/Serving: ${calories}`);\n    $('.index').text(`${recipeNumber}/${data.hits.length > 5 ? 5 :data.hits.length}`);\n    $('.card a.btn').attr('href', recipe.url);\n\n    for(let i = 0; i < recipe.ingredients.length ; i++){\n      $('.card-body .ingredients')\n        .append(`<li>- ${recipe.ingredients[i].text}</li>`)\n    }\n\n    if(data.hits.length > 1) {\n      $('.btn-prev').on('click', () => {\n\n        if (index > maxIndex - 4) {\n          index--;\n          changeRecipe(data, index, maxIndex,recipeIndex)\n        } else {\n          index = maxIndex;\n          changeRecipe(data, index, maxIndex,recipeIndex)\n        }\n      });\n      $('.btn-next').on('click', () => {\n        if (index < maxIndex) {\n          index++;\n          recipeNumber++;\n          changeRecipe(data, index, maxIndex,recipeIndex)\n        } else {\n          recipeNumber = 1;\n          index = maxIndex - 4;\n          changeRecipe(data, index, maxIndex,recipeIndex)\n        }\n      });\n    }\n  };\n  const clearRecipeData = ()=>{\n    $('ul.ingredients').empty();\n  };\n\n  handleSelection();\n  $('.search').on('click',createRequest);\n  $('.lucky').on('click',drawRequest);\n  $('.door').on('click', openFridge);\n});\n"]}